<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADeHQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAAB2YSURBVHja7Z35X1XV3sf9L7o/Pq/M6RaKOOCcA6AoAodRGQQnRlERBxAccARFRAQU
        tNLMsjQtxxyx0rqVU14zFTW0+zx3qG6lDU75fdZ3HY4xc/ba++x9Dny+r9fnpdenc/Za59mf95q/q1Mn
        BAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBALhGUHfvAB1VNV06UQfeXWi
        Uz2hDip+EZ6DOqhqujwnAPAX8SJAHVQMgKtQB1VNl6sCANfEiwB1UDEACOqgqulCAgAkXgSogwoAAABg
        BAAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIA
        IAAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIA
        IAAAAgCg9gGAWlZnNVlpGqvKrPrc1nSzHgCqm5HeF6xaUTBm+wbA09td6Lev/0r3v3qJftGqqy/Sk1td
        LTH/79d6qJVZ6HFNN+XnPrzeXfm5ren+ly/RvQ986N6h5vXgqLfyi/XomHeL39uWftfxXMjdASBa/l+F
        iSuWpdHCtEWUl57ntHLTF9GKrAV0+6NBpvcE2MC7SifRwlStZc6jxRm5dG5/ANEdtTIffCWKclIXa3qu
        M8pJyaHUqERKjYxroqTweHpvtShztcIQ4bQXndowUn5PSjPf3Zr4uTsWjaUnJ3rBoO0TAJ3p5797Uda0
        fAr220Kh/pVOK8S/imJDSunK0RHKZlJuhW90p7U5cyh4lLYyh4oyh4/ZRCfesIkyP6+9tyS0pSCZxmt+
        btvlGj+qjAb2zaT+vdOFZjSQT68MqpgXLM2sAoBd+YHU32cG9Wv0vW2pj3ju8uQIenwcAGjXAJg3fal8
        EcNGb3ZatoBKirdtsAwA6xZmSuNoKTMrcmwFndipDoCthUkU4qf9uW0pxH8jDe43mwb0SW+ivt4zaJMO
        ALy9LJAGNvO9bYmBsSIlHAAAAAAAAAAGBQAAAAAAAgAAAAAAAgAAAAAAAgAAAAAAAgAAAAAAAgAAAAAA
        AgAAAAAAAgAAAAAAAgAAAAAAAgAAAP7dmipsdCUF+5XRIAEAX5/0JmIAVAAAAAAA4NkAiBpXLg9QxQQ3
        VGzIRpoQVEx+QzJoxKAUGtlIw3xTaWtOEAAAAAAAngoA/r1Kl2TQxUN+dO5AQAOdF/pinz+d2TyCzpYP
        b6KPhe687av2YgEAAAAAYD0A+PfduzmG6B//Y/+9GkiU5ZZ4xscv2Vv55qSanQcAAAAAAPcAwJ5NsUR3
        nzc3JyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAADAoAAAB6AfBuSwDg25lvAgAAAADQrgHwTlk8/XGrqyx/E13tQQ9O9pK3ADen
        x6oXdLZTAHCZWvqt9IhvUn4KAAAAxh8H3kyZU5bT+rzZVJzbWJm0Nnsm5U2LodwpUU2UMzmajhWPUjsR
        2A4BwOXhC08Xit+lud9LVfx9FXOD6dcjvdVPXwIAAEBrvxnfqhzajMaPKhemy5Sma6zePTOofC4yAjnE
        LTWblW9Nbu73UlUf7xkUPz6RfjzQBwAAAJAT0J0BwC02l2+AQr1aEl+hnhiSAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOgHQG2jPwEAAAAA6CAAEM+9dmIYHdkWQb9f6yH/NwAAAAAAHQEA
        deafM3U5RY8rpzc3JNKD69ogAAAAAACAJwKgnvlDxef5OyYElWmGAAAAAAAAngaARuav/z1aIQAAAAAA
        gCcBoAXzq0Kg/QGgUgJA3g4MAFgHAPF9CcEAgLEAaMP8KhDwVACEj9lEkYEVzWiT+L9voGG+s0QvII2G
        NBK/nJULxgMA9QCweFoUDeyb3uS30qNBfdNoqm0S/QQAGAQAJ82vFQKeejtw4YIsOvGGjY7tCGug40JH
        t9lo/5oxtL/Av4neXx1AX78+CMeB6/TkRC86t2WY/F2a+71U9X5BAH20cQQ9POaNfAC6AaDR/Fog4Pm3
        Az/fUJwl6Lao5xncDuy0qr1a/q30CglBdAJA0fzOQgA5AQEApARzVwDoNL8zEAAAAAAAwB0BYJD524IA
        AAAAAADuBgCDzd8aBAAAAAAAcCcAiJfaFeZvDgIPr3enRzXdAAAAAABwBwBcPT6cbpwa6jLzN4VAAt27
        4iWz6QIAAAAAYCEAJtlK5GUXc6fnu9T8jSGwrWgarZw7X3OZAQAAAAAwCAAOM3EvwOZi4zeGAJ8ijA0p
        Vfo8AAAAAAAGAcBx4UXYaM8RAAAAAAAGAsDTBAAAAAAAAAAAAAAAAADgJrcDf+O+twOvTA1Xv5gUAgBa
        m8yzAjqW9gAq4uSmqae3uzTVja709EMvenqyZ7Nyhx5AS2VTFUzfQQHA5p8aVUTZKUvkGfmOAACuc3bK
        YtpakERbVic3UeWK6bQ+M5yKZ9maqCjDRmfKh5t+HNjXJ50mjp1MRTNtzZZLVevE923MCqHbbw2w5Nw9
        AGAhAEKl+dfRmd1B9J9zPrQ2Z06HAICj7vzZJvKvoqCR9tuBOfuPu9wO7ICAkTfwsriOwwak2qFm4fFb
        AMBkADjM//E7Qfbni+7w9xd6mwoB5AS0XgyVkYNS6CwA0HEA0MD8txuW4fsL3qZBAAAAAAAAkwHQovkt
        gAAAAAAAACYCoE3zmwwBAAAAAABMAoDT5jcRAgAAAAAAmAAAzeY3CQIAAAAAALgYAMrmNwECAAAAAAC4
        EAC6ze9iCAAAAAAA4CIAGGZ+F0IAAAAAAAAXAMBw87sIAgAAAAAAGAwAl5nfBRAAAAAAAMBAALjc/AZD
        oKMCYAAAAAC0BICsafkULF5qhoA2VclTfS43fwsQ0F7eSnn6kC/oVAXAloJkGj9qi9KzW1RAlfjOMnkY
        qF9v+zXV9eXTK4MqdBwG2pUfSP197Adx+ruBuBwv4zCQGwCAb9m53p1O7QylPRWxMmGFJonPXDzoJ8+z
        mwktPkB08JUo7eUV2rc5hr75eGCr14+3pkuHR8lz/SrPbk17yibS9sXjaVvuuCZ6dWEQnd8yVO3orPjM
        1e2Dm/1eq/Sa0M4lY+nb3b44Dmw1AOyn8upuqFXRnc5kRc9FubysWh1lvqPz2S2p/u3AHzajah0tJZvs
        Qy/3kp4bjwEAqN3JVTkBIQAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIA
        IAAAAgAgAAACAKD2DQA+JMPiAy+NDwjdcaizvsM07qTaF1qu791G9a21GADVHnjw5rTOMus5/HTaogNO
        HgeAWvvLz0d673/1Et39xJfOH/CXZ+b5yC0fn92/dQIdfT2c/rY3kG6eHkz/vdSLHt3o7pkwcBhe/P23
        r/9K//y8L13+YCRVvxVCh1+NpH2VE+m9qon0wbYImefg6xMv03fnfej3az3+/GytyQAQ5r/82hB6LW8c
        bdeobUJ7V46mHw/0MQ8C4jl8pXh16Qj5fK1l5nqeKBlJj+quJdf67H/t7UdvLg2Ux47NO+IcRPtWjabf
        PujtIQCo5XvqX6AfLnrT2T3j5LXVuel5MrtPbEipzJzjuNaa/4wI3EQTx2+kxPD1NDNxJRXnzqYj2yLp
        20996fHNbtYcC1bo3dy/8hJdOuRHb6yfTMvnLKCkiWsoLnQDRY0rl8lCuL62AFFf8ffooDKaZCuh1LgC
        WjV3vjy3f6N6qB0GRsOvNQCI1oVfMM4MxIk9NKn3DBrUN41WpETUQcDL5eZ/cqIX7VkxmvyHJNuTkGgs
        cx9Rz8zYGPr1SG/t0BKtMOdO4IxDZiZA4f/fRI6eQt+/31cZtJ3MM34X2dK/VZpAmVOX0wTxovMV1Zyd
        xmGA5u+4twNBXnMt/nuGQnLMGirLT6cvj4yih45egRsa/3sBuiOiVWfIxYWWPstoZK9v8+nQbHUAlHX2
        t6cBmxxRTAXz59LHu4Nkj8mw+rYBAG5J+UVTSsElZAoEGpm/v49ayjA27py4icoAuLB1qHy+r495ac4Y
        XNFj3B0AwgjfXehNuzZOotTYwmdptWw6ctnZzVEpW8rSJRlUUz1Eps5yi6GBKMOvV1+UOQDnTs+nyMCK
        Z5DTW1+G5rLMbDq3P4Ae13TTX18XAsAUCBhkfgDARUb441YX+bJmpy6WXd3QAGOvAnP0DJJFl/r9qgnS
        eJZCQDz79keDaE12ljSr0VefcW/IAb5XCpPkPIGu+roYAC6FgIHmBwBcYAQes+7dHCO7r668BtyRJZjH
        0xsWz6R/n+tjPgRqX5CwO7N7HGUkrJLlaWlIYxT4+M9FGbl0/eQw9fqaAACXQMBg8wMABpufx6mvrplO
        0cKUtgDXmr/hXMFmWjorh+6cHWAeBIT5H9/sKsf6CeHrXQ67BuATz2LgXDjo79YAMBQCLjA/AGDo+Pev
        VLkqhSLE2Ncs8zfuDfCk27ef+JoCgT9udZVLeXEhG6ypr4BASmyhHQJa62siAAyBgIvMDwAY1BI+utFN
        LnVFja1waRfYmS7ysswFcvLR1RA4vSuYJoWVWGL+xj2Ba1qHAyYDQBcEXGh+AMAgndwZSjHBGy01Q31t
        XpFKD673cM0mGmE03rCTElNoare/NQjwnMB35zVAzwIAKEHAxeYHAHTn+O9MNz8cTGnxBYbP9OuZE5gw
        voyO77AZ3wsQ3/fT5Z6UPzvbLcxfX7w6IJcI3RgAmiBggvkBAJ1d/wfXelDJolluY/76reKsySvoH5/2
        NxwCvF2ZNyW5U32558VLhLz06lR9LQSAUxAwyfwAgM7W/9O9gaLrX2rpuL+1nsD2oqlymc6o3s7dswMo
        La7A7YDngB5vFvqFdwy2BQGLAdAqBEw0PwCgo/Xnwy2r5s5zu65w/VaRNwrV8t18Bmyh5S3NO0sS3bKu
        DuBNFEMfPmvRZn3dAADNQkAYykzzAwA67ve7eNBfHmzRO/Fnq1vC4/3+fBV2/XMCuk0htKt0kiFj/399
        0efZZh9DdjK6oL78PXx2wH6a0P0BUB8CKwUE/rOvL7270jzzWw0A37rna1WfXhkUEWAhALhbvbUgWXfr
        79jnPmfqclqfN4uqVqdQWf4MypuR92yJTc/wgr9/fvJSOXGn95JOPrLsOLWoZ68C75NIj19NhdlZct/E
        phVptGxONk2LLmqw208VLLwDk08RttoLcCMAOIwwpH8aJYXH0+ih5pnfSgDwfx/4chKtTgun4lk2TVo3
        0yaPH/+iUmbdABBG4mO9PMmmpzUMH7OZctMX0Udvj7ef+a/pJrvZT252lePYK0dHyAlG7taqmoLhwceN
        5WYZTrihWGfOR7Aud/azU3qq5syYtIr2b42WvYkH17vTH6K+vKGIh1PffDxIzlmwgfX2BngrdqvAczMA
        1O/amtmVthIAXNfEkAT6cX8f+V1PT2qUZRmBRMty6bCfNJZq68yz6BtFSy/Xrps7616XDIPX8g8Iw8Tb
        SnRAoJLe3jhJvQfApxrP+8hWW08ZeK2el0yfZUKqbZQt6I79ENXn743R9SweUhQuyGp9H4SbAsAKWQ4A
        M5OnGAOA52lfZYzysV5+sddkz6Gf/+7V9mSVPFnYVbZofOhHbRhQJcfFyhuDRBkvHlIHHveS5kxdRrVn
        BjrXCxF1/kxAQLUnwJ/hlYpWNwYBAACAnj3wPG7lCSyVlzNp4lq6eXqI8zPzdYeMOKOOypwDG3D2lBX0
        05eK8wB3n5cHfjhrj8okJG9K4m3DWlYiuCfAwwE9ewLk9uA7AAAAYCQA6pb/lM0oPlO1KkX72rxoOXmu
        IDqoXMkQUyLXyXRiSgAQn+FzDiEK43+uL09o3rvipe3Zwrg8JzAtqkhzL0BCJ6iMzuwOarnH4eKMQFYY
        2dcHADABAJ3Fy/wSZacsUQIA573j5JeaJ+TEczmhJvce6qfWckZcznjbBrl/X2U/AMOKzxaoAaCKdhRP
        0Q6eOtDyxh6V35l7K5xoVGYbNhkAfoOT5Yy+2SBgEw7qlwYAuBoAvKSWOWW55hUA2TUNK1EzYt0wIH92
        DiWI70gU42OnFb5eJtr86thwJQDw/npOOKICAM6GdKQ1Izoz1PKvUlr94ExJZgOAzZSfFElFGWF2CPiY
        s3KQHh1LlQvG0/ABqZrBAwBoNOKPX/ZS2hDDAGAz3vxwiGJL3FXu7efUW1rFE3DcoqrU+aGOJUDeN8D7
        B1SWIDnX4dbCJKW5Fu41cFZhKwCwfnYo3TvkI9eqB/dzLQTYRCmRcVS7awCdLBlJLwMA7RcADfLs1ypI
        cdJTAmBhpjoAdloDgD0WAYA3qvALff8wQyDMZRBwmP/WmwNkmU+sHwUAtHsAWCAAQDsAeKMKH+65f8g1
        EGhg/mr7LTkAAAAAALgTAOpO9hkNgSbmrzMiAAAAAADuBgCDIdCs+QEAAAAAcGMAGASBFs0PAAAAAICb
        A0AnBFo1v4cDgFdMnt32q1UAAADgMQBQhECb5vdQAPB/H+o3jXblj6EDhf60v0CLAujUhpH04Kg3AAAA
        eBAANELAKfN7KABYA/umy99giEZxApWYcZPpB9MTggAAAIBeADgJAafN78EAUJ4MFWWOsiQlGAAAABgB
        gDYgoMn8HREAluUEBAAAAKMA0AIENJsfAAAAAAAPBUA9CBTVQSAlQqP5AQAAAADwYADUQeDngz709rJA
        qtk5UPvloQAAAAAAeDAA6iCgvK4NAAAAAICHA+AUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAABAewGA8u3A3jMoYjQAAAAAAJ57HLjuLoP5kyZQ3pQoytWghZOjqWR2qNxBCQAAAACA
        hyYEmRScQP/e148eHvOWZ/u1iD/zFAlBAAAAwLMzAv0kU4J5ISUYAAAAdEQAICcgAAAAAAAAAAAAAAAA
        AIBTN+cqCQAAAAAAdwDAYCUAsCEeXu8uL/n8/Zrz+k3+2YOe3OpqCQBOWgWACgAAAHAJAHrSrMSVSgBI
        CFtPN6qHKlwP/oI0/raiabR8zgJamTXfaa3IWkBrc+bQrY8GKV0S+qimG61fNEvpmu6IwAo69nqYGgBu
        d6GqVSlKAODfet/mGAAAADAeAD//3YvmJeXLVkbrnfUxwaV0bn+AdkOI5/5wyZvS41dTsN8W+WxnxQaK
        DSmlr46NUOp5PLnZlcqXpSsBgI24pyJOCQDc81ibo9bzCB+ziQ69GgkAAADGA+CXqy/S4pkLNQPAod3l
        cdpbYmGgyx+MpLjQDdJUKkOP24o9ANara6YrdsWrZO+Dzaz1d/7uvA/NTFipub6sqLHldOrNkJbBAwAA
        AKqTYtwlLlk8U6lFZGjMT15KP1z01mRGHr9zd1jFDPyZtLgC+v5ibzUACBO9VzWRbAqw42dPiVxHX594
        WVsvQJSThw5sZJVnMigvHR7Vco8HAAAA1GfhO9ObGxKVuqaOcfE7ZfH0x60uzs3Oi5f4wkF/SowoVgIA
        Q2eJ6LH8KnouqgD45N2xNCGoTBkCRQsznX++qO8/Pu1PWdOWaZ5ncTxvWnQR/e/f+rf8PAAAAFAGgDDE
        md1BFK3DEJPCSujEGzYBga4tv6T870LXTg6jOVOXK5nf0Q1/pTBJTqqpAu/uJ77SVKpliBpbQdvXTZUT
        mS22yrX23/Y/53yoYEGWnDNRq28lLcrIpV++ehEAAABc0wPg1iVpwlplQ0gI2EpoZ0ki/euLPs/A8kzi
        GfevvEQnd4bKJUfV50jzjSun07uClSbiHPXl1nvprBzlXg+bmctRsmgm3fpwsJxYbFBfoQfXe8ieDptX
        ta4OAPBqSat1AgBwO7Cu3XHXu8vJLVVDOCDAs9WzJ6+g19ZOk5NWn78/WvYudpfH0+KZufZutw7z82dT
        xfj//z7rpzwB6IAAT17qMaajPEkT18pVhaPbw+mzfWPo071jaf+WaFqTnSWhGKqrvrzSspG+EL9jq8AD
        ANzidmA+03+0eBSdrXiZzpYPd1pnhPi5j455WwMA7sZy68wbXfSagl94brW4m8wvb3Sd6fnfbHq/W3wH
        m022uDrrW1M9hCYrzkM0hgCDMyJwE00cv1Go7NlQRe93c30XJC+lny73bB14AIBbJAThW35HDEyhkYO0
        abj4TEJwAv2wv4/J+QDqL1Nd6G2fqPKv1A2B+i2YzbDvss+Gnz/gb8jZA17KK86b5bb1daz/yw1AbdUH
        AHCblGD8Oa3qZ9ntwI0mrXh5jF+6MANfYqPERi1ckCW3Aes5C1C/F3DxoB/FK+xFMKu+vEPzn5/3bXu4
        AwAgJ6B+ANh7AQtSlhjaKhrV+ieEr6dLh/wMPXnIvYCNS2e4JQB4OLZ/a7RzdQEAAABDTCEgcGb3OLnV
        1t1Mwbv3dI/9m+kF8I5C3lgU6kb1ZQDnz86R27SdmuwEAAAAo0zxSLSKrxZOF0MB9zFDbnqeXE/XNfPf
        io7vCJMTeO4AvVC5srCGvjo+3Pn6AgAAgGGGEC/dfy950/I52Za3ivz8lNhCunJ0hMvMz/MJPBTgzUUR
        Fs9/MIC493VMAElTHQAAAMBYU3Smu2cHUE7qYsvmA9j8vEx3ds8412cKEvW9J7rbvLHHSvPzPgnen/C4
        ppu2iU4AAABwhSk42QdDwOyuMUNnalSR3PGnvOVXob58qIlzBXBPwMw687N4CPJWaYLcQai5twMAAACu
        MsW3n/jSyrnz5fKgGaZg8/N24c/eG2N+zsC6/AhbVifThPFlpgyBuL58MOrA1mj7MWOVoQ4AAAC40hSc
        Nmx70VS5Zu6qIQGbLTKwglbNm0c3Tw9x3ZjfifpyK3xkWwQlT1wjy6V6kKetVp//5GQsvNXXfppSsc4A
        AADgalPwuPTz98fQ4oxcuUYtt/YGGGN8/nNG/Grav2UC3bviZX2W4Tojcrqz4rzZckuzvb6VhhjfMb/x
        2pppzm30AQAAAEsBUG/d/MfLPeXBl4Vpi+zdZP/KulbSOXPYGuyfr5BpwXasnyKP6NY3n1tI1Jd3Hn66
        N1DuQoy3lfx5rkEDDByf4b9PjVpHZfkz6Orx4fZ9DUbUFwAAAExtHYX4gAqffOPDOTMTV8rlK37BOdUW
        m7thLr8q+e9ypltAg7vWBfPn0gfbI+TJPjnRV+umdwvU/gmCy0dGyqHQvKSlMgcCHwDiTEoh/o3r7Pi3
        SnlsmLMIcdq1dzfFyuPDnIXJ0F5OGwB4LTdI3kDLENAin14ZtG6mNQA4XjyKhvZPk4bWUmauZ2ZMjDIA
        zm8ZSqMGpWh+rh71FWWOHO0pAKgPgjvPy1aMZ885ZdXBrdFyx9663ExakTWflsxaSMsys+XR2M0rU6UB
        GBpsejnbfaez+xq/BRAwrHiikBObHH09nHYUT6GSRbPk3AXnGMifnS3hxq38ro2T5EpG7ZmBf2YQcsXw
        pjUAiJf6SJEfJYXHU3JEnCZND4unt5eNMT25BZf5XNUwypgQq7nMXM+yrBB54abm51Z70Y03BsoeRIr4
        rtRIc5QcEU9Lp0fSzwd9PAgATWDQ+VnWWp7N5vz9/NJz1hw2u5zkqpcgxJADPe5QX/F3btG5h8D1/ZXr
        y/cWyCQhnevV14Wgaw0AQnzzLCeqUNHvR73NB4DQ4+O9lMv8m2j9VW/afXKiF90/7KP8bFX9cri3rp5W
        J7dsMR1G92Sze0J92wCAvXVT1CkLZVWZqy3SqfYEAMi9AAC1awEAAACMAABAAAAEAEAAAAQAQAAABABA
        AAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAABABA
        AAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAABABAAABkNACuQh1UNV2uCgBc
        Ey8C1EHFAHgO6qCq6fKcAMBfxIsAdVAxAKCOqpounQQAOokXAeqgQiAQCAQCgUAgEAgEAoFAIBAIBAKB
        QCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQHhL/D4zbE8/5bVqMAAAAAElFTkSuQmCC
</value>
  </data>
</root>