<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8hr0nSsOH1AAAAAASUVORK5CYII=
</value>
  </data>
</root>